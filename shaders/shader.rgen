#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : enable

layout(binding = 1, rgba8) uniform image2D storageImage;
layout(binding = 2) uniform Uniforms {
    mat4 viewInverse;
    mat4 projInverse;
} uniforms;

layout(binding = 0) uniform accelerationStructureEXT topLevelAS;

layout(location = 0) rayPayloadEXT vec3 payload;

void main() {
    vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + 0.5;
    vec2 inUV = pixelCenter / vec2(gl_LaunchSizeEXT.xy);
    vec2 d = inUV * 2.0 - 1.0;

    vec4 origin = uniforms.viewInverse * vec4(0,0,0,1);
    vec4 target = uniforms.projInverse * vec4(d.x, d.y, 1, 1);
    vec4 direction = uniforms.viewInverse * vec4(normalize(target.xyz), 0);

    uint rayFlags = gl_RayFlagsOpaqueEXT;
    float tMin = 0.001;
    float tMax = 10000.0;
    
    payload = vec3(0); // Initialize payload
    traceRayEXT(
        topLevelAS,
        rayFlags,
        0xFF,
        0,
        0,
        0,
        origin.xyz,
        tMin,
        direction.xyz,
        tMax,
        0 
     );
    
    imageStore(storageImage, ivec2(gl_LaunchIDEXT.xy), vec4(payload, 1.0));
}